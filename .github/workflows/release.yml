name: Release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: build
        run: cargo build --release
      - name: package (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euxo pipefail
          ver=$(echo '${{ github.ref_name }}' | sed -E 's/^v//')
          os=$(echo "$RUNNER_OS" | tr '[:upper:]' '[:lower:]')
          [ "$os" = "darwin" ] && os="macos"
          arch=$(uname -m)
          mkdir -p dist pkg
          for b in blit blitd blitty; do [ -x target/release/$b ] && cp target/release/$b pkg/ || true; done
          cp -f README.md LICENSE pkg/ || true
          tar -C pkg -czf dist/blit-v${ver}-${os}-${arch}.tar.gz .
      - name: package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ver = '${{ github.ref_name }}' -replace '^v',''
          $os = 'windows'
          $arch = $env:PROCESSOR_ARCHITECTURE
          New-Item -ItemType Directory -Force -Path dist,pkg | Out-Null
          Copy-Item target\release\blit.exe -Destination pkg -ErrorAction SilentlyContinue
          Copy-Item target\release\blitd.exe -Destination pkg -ErrorAction SilentlyContinue
          Copy-Item target\release\blitty.exe -Destination pkg -ErrorAction SilentlyContinue
          Copy-Item README.md,LICENSE -Destination pkg -ErrorAction SilentlyContinue
          $zip = "dist\blit-v$ver-$os-$arch.zip"
          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path pkg\* -DestinationPath $zip
      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
